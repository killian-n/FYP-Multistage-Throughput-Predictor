{"trial_id": "07", "hyperparameters": {"space": [{"class_name": "Int", "config": {"name": "classifier_input", "default": null, "conditions": [], "min_value": 128, "max_value": 256, "step": 16, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "num_lstm_layers", "default": null, "conditions": [], "min_value": 0, "max_value": 3, "step": 1, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "num_dense_layers", "default": null, "conditions": [], "min_value": 0, "max_value": 3, "step": 1, "sampling": "linear"}}, {"class_name": "Float", "config": {"name": "input_layer_dropout", "default": 0.0, "conditions": [], "min_value": 0.0, "max_value": 0.5, "step": 0.1, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "learning_rate_classifier", "default": 0.01, "conditions": [], "values": [0.01, 0.001, 0.0001], "ordered": true}}, {"class_name": "Int", "config": {"name": "units_0", "default": null, "conditions": [], "min_value": 64, "max_value": 128, "step": 16, "sampling": "linear"}}, {"class_name": "Float", "config": {"name": "dropout_0", "default": 0.0, "conditions": [], "min_value": 0.0, "max_value": 0.5, "step": 0.1, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "dense_units_0", "default": null, "conditions": [], "min_value": 16, "max_value": 64, "step": 8, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "dense_activation_0", "default": "relu", "conditions": [], "values": ["relu", "sigmoid"], "ordered": false}}, {"class_name": "Float", "config": {"name": "dense_dropout_0", "default": 0.0, "conditions": [], "min_value": 0.0, "max_value": 0.5, "step": 0.1, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "dense_units_1", "default": null, "conditions": [], "min_value": 16, "max_value": 64, "step": 8, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "dense_activation_1", "default": "relu", "conditions": [], "values": ["relu", "sigmoid"], "ordered": false}}, {"class_name": "Float", "config": {"name": "dense_dropout_1", "default": 0.0, "conditions": [], "min_value": 0.0, "max_value": 0.5, "step": 0.1, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "dense_units_2", "default": null, "conditions": [], "min_value": 16, "max_value": 64, "step": 8, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "dense_activation_2", "default": "relu", "conditions": [], "values": ["relu", "sigmoid"], "ordered": false}}, {"class_name": "Float", "config": {"name": "dense_dropout_2", "default": 0.0, "conditions": [], "min_value": 0.0, "max_value": 0.5, "step": 0.1, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "units_1", "default": null, "conditions": [], "min_value": 64, "max_value": 128, "step": 16, "sampling": "linear"}}, {"class_name": "Float", "config": {"name": "dropout_1", "default": 0.0, "conditions": [], "min_value": 0.0, "max_value": 0.5, "step": 0.1, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "units_2", "default": null, "conditions": [], "min_value": 64, "max_value": 128, "step": 16, "sampling": "linear"}}, {"class_name": "Float", "config": {"name": "dropout_2", "default": 0.0, "conditions": [], "min_value": 0.0, "max_value": 0.5, "step": 0.1, "sampling": "linear"}}], "values": {"classifier_input": 176, "num_lstm_layers": 3, "num_dense_layers": 1, "input_layer_dropout": 0.1, "learning_rate_classifier": 0.01, "units_0": 96, "dropout_0": 0.30000000000000004, "dense_units_0": 16, "dense_activation_0": "sigmoid", "dense_dropout_0": 0.30000000000000004, "dense_units_1": 40, "dense_activation_1": "sigmoid", "dense_dropout_1": 0.4, "dense_units_2": 64, "dense_activation_2": "sigmoid", "dense_dropout_2": 0.1, "units_1": 80, "dropout_1": 0.1, "units_2": 64, "dropout_2": 0.0}}, "metrics": {"metrics": {}}, "score": null, "best_step": 0, "status": "FAILED", "message": "Traceback (most recent call last):\n  File \"C:\\Users\\Killian\\miniconda3\\envs\\tf\\lib\\site-packages\\keras_tuner\\engine\\base_tuner.py\", line 266, in _try_run_and_update_trial\n    self._run_and_update_trial(trial, *fit_args, **fit_kwargs)\n  File \"C:\\Users\\Killian\\miniconda3\\envs\\tf\\lib\\site-packages\\keras_tuner\\engine\\base_tuner.py\", line 231, in _run_and_update_trial\n    results = self.run_trial(trial, *fit_args, **fit_kwargs)\n  File \"C:\\Users\\Killian\\miniconda3\\envs\\tf\\lib\\site-packages\\keras_tuner\\engine\\tuner.py\", line 287, in run_trial\n    obj_value = self._build_and_fit_model(trial, *args, **copied_kwargs)\n  File \"C:\\Users\\Killian\\miniconda3\\envs\\tf\\lib\\site-packages\\keras_tuner\\engine\\tuner.py\", line 214, in _build_and_fit_model\n    results = self.hypermodel.fit(hp, model, *args, **kwargs)\n  File \"C:\\Users\\Killian\\miniconda3\\envs\\tf\\lib\\site-packages\\keras_tuner\\engine\\hypermodel.py\", line 144, in fit\n    return model.fit(*args, **kwargs)\n  File \"C:\\Users\\Killian\\miniconda3\\envs\\tf\\lib\\site-packages\\keras\\utils\\traceback_utils.py\", line 70, in error_handler\n    raise e.with_traceback(filtered_tb) from None\n  File \"C:\\Users\\Killian\\miniconda3\\envs\\tf\\lib\\site-packages\\tensorflow\\python\\eager\\execute.py\", line 54, in quick_execute\n    tensors = pywrap_tfe.TFE_Py_Execute(ctx._handle, device_name, op_name,\ntensorflow.python.framework.errors_impl.InternalError: Graph execution error:\n\nFailed to call ThenRnnBackward with model config: [rnn_mode, rnn_input_mode, rnn_direction_mode]: 2, 0, 0 , [num_layers, input_size, num_units, dir_count, max_seq_length, batch_size, cell_num_units]: [1, 176, 96, 1, 10, 32, 96] \n\t [[{{node gradients/CudnnRNN_grad/CudnnRNNBackprop}}]]\n\t [[Adam/gradients/PartitionedCall_2]] [Op:__inference_train_function_2803497]\n"}